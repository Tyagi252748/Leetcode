class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector<vector<int>> ans;
        if(nums.empty())return ans;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < n; i++){
            for(int j = i + 1; j < n; j++){
                long long sum = nums[i] + nums[j];
                long long req = target - sum;
                int s = j + 1;
                int e = n - 1;
                while(s < e){
                    if(nums[s] + nums[e] == req){
                        ans.push_back({nums[i], nums[j], nums[s], nums[e]});
                        while(s < e && nums[s] == nums[s + 1])s++;
                        while(s < e && nums[e] == nums[e - 1])e--;
                        s++;
                        e--;
                    }else if(nums[s] + nums[e] > req)e--;
                    else s++;
                }
                while(j + 1 < n && nums[j] == nums[j + 1])++j;
            }
            while(i + 1 < n && nums[i] == nums[i + 1])++i;
        }
        return ans;
    }
};