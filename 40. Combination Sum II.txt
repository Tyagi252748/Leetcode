class Solution {
public:
    void solve(int idx, int target, vector<int> &Arr, vector<int> &ds, vector<vector<int>> &ans){
        if(target == 0){
            ans.push_back(ds);
            return;
        }
        for(int i = idx; i < Arr.size(); i++){
            if(i > idx && Arr[i] == Arr[i - 1])continue;    
            if(Arr[i] > target)break;
            ds.push_back(Arr[i]);
            solve(i + 1, target - Arr[i], Arr, ds, ans);
            ds.pop_back(); 
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<int>ds;
        vector<vector<int>> ans;
        solve(0, target, candidates, ds, ans);
        return ans;
    }
};