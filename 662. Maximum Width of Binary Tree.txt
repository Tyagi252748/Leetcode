class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root == NULL)return 0;
        queue<pair<TreeNode*, int>> q;
        q.push({root, 0});
        int ans = 0;
        while(!q.empty()){
            int min = q.front().second;
            int size = q.size();
            int first;
            int last;
            for(int i = 1; i <= size; i++){
                TreeNode* temp = q.front().first;
                long curr_id = q.front().second - min;
                q.pop();
                if(i == 1)first = curr_id;
                if(i == size)last = curr_id;
                if(temp->left)q.push({temp->left, curr_id*2 + 1});
                if(temp->right)q.push({temp->right, curr_id*2 + 2});
            }
            ans = max(ans, last - first + 1);
        }
        return ans;
    }
};