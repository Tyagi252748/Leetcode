class Solution {
public:
    void solve(int idx, int n, vector<int>& nums, vector<int>& ds, vector<vector<int>>& ans){
        if(idx == n){
            ans.push_back(ds);
            return;
        }
        ds.push_back(nums[idx]);
        solve(idx + 1, n , nums, ds, ans);
        ds.pop_back();
        solve(idx + 1, n, nums, ds, ans);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>>ans;
        vector<int> ds;
        solve(0, n, nums, ds, ans);
        return ans;
    }
};



							OR 


class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> ans;
        for(int i = 0; i <(1 << n); i++){
            vector<int> temp;
            for(int j = 0; j < n; j++){
                if( (1 << j) & i)temp.push_back(nums[j]);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};